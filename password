#!/bin/bash

# Function to check password complexity
is_valid_password() {
  # Regex patterns for different character types
  pattern_lowercase='[a-z]'
  pattern_uppercase='[A-Z]'
  pattern_number='[0-9]'
  pattern_special='[!@#$%^&*()_+\-=\[\]{};:\'\",./<>?|]'

  # Check if password has at least 8 characters
  if [[ ${#1} -lt 8 ]]; then
    return 1
  fi

  # Check for presence of at least one character from each type
  if ! [[ "$1" =~ $pattern_lowercase ]]; then
    return 1
  fi
  if ! [[ "$1" =~ $pattern_uppercase ]]; then
    return 1
  fi
  if ! [[ "$1" =~ $pattern_number ]]; then
    return 1
  fi
  if ! [[ "$1" =~ $pattern_special ]]; then
    return 1
  fi

  # Password is valid
  return 0
}

# Loop until a valid password is entered
while true; do

  # Prompt for password (hidden characters)
  read -sp "Enter password (at least 8 characters with lowercase, uppercase, number, and special character): " password

  # Validate password
  if is_valid_password "$password"; then
    echo
    echo "Password accepted!"
    break
  else
    echo
    echo "Invalid password. Please try again."
  fi
done




